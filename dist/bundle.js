(()=>{"use strict";var __webpack_modules__={332:()=>{eval("\n;// CONCATENATED MODULE: ./src/selectors.js\nconst startBtn = document.querySelector(\".pomodoro__start-btn\");\r\nconst timer = document.querySelector(\".pomodoro__timer\");\r\nconst resetBtn = document.querySelector(\".pomodoro__reset-btn\");\r\nconst dailyPomoCounterDisplay = document.querySelector(\".daily-pomodoro-counter\");\r\nconst totalPomoCounterDisplay = document.querySelector('.total-pomodoro-counter');\r\nconst notificationSound = document.getElementById('timer-end-sound');\r\n\r\n\n;// CONCATENATED MODULE: ./src/constants.js\nconst userDefinedPomoLength = null;\r\nconst userDefinedShortBreak = null;\r\nconst userDefinedLongBreak = null;\r\nconst userDefinedPomosTillLongBreak = null;\r\nconst defaultPomoLength = userDefinedPomoLength || 25;\r\nconst shortBreak = userDefinedShortBreak || 5;\r\nconst longBreak = userDefinedLongBreak || 15;\r\nconst pomosTillLongBreak = userDefinedPomosTillLongBreak || 4;\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/countdown.js\n\r\n\r\n\r\n// Запрос на экранные уведомления\r\nif (\"Notification\" in window) {\r\n  // Request permission to show notifications\r\n  Notification.requestPermission();\r\n}\r\n\r\nlet countdownInterval = null;\r\nlet blinkInterval = null;\r\nlet remainingTime = defaultPomoLength * 60;\r\nlet isStarted = false;\r\nlet isBreak = false;\r\ndailyResetOfPomoCounter();\r\nupdatePomoCountersDisplay();\r\n\r\nconst storedTimerState = getStoredTimerState();\r\n// Retrieve timer state from sessionStorage if available\r\nif (storedTimerState !== null) {\r\n  const { remainingTime: storedRemainingTime, isStarted: storedIsStarted, isBreak: storedIsBreak } = storedTimerState;\r\n  remainingTime = storedRemainingTime;\r\n  isStarted = storedIsStarted;\r\n  isBreak = storedIsBreak;\r\n  if (storedIsStarted) {\r\n    startCountdown();\r\n  } else {\r\n    updateTimerDisplay();\r\n    if (storedRemainingTime !== remainingTime) {\r\n      startTimerBlinkOnPause();\r\n    }\r\n  }\r\n}\r\n\r\nfunction countdown() {\r\n  if (remainingTime > 0) {\r\n    remainingTime--;\r\n    updateTimerDisplay();\r\n  } else {\r\n    notificationSound.play();\r\n\r\n    pauseCountdown();\r\n    startBtn.innerHTML = \"Start\";\r\n    isStarted = false;\r\n    isBreak = !isBreak;\r\n    if (isBreak) {\r\n      const pomoCounter = getDailyPomoCounter();\r\n      setPomoDailyCounter(Number(pomoCounter)+1);\r\n      setTotalPomoCounter();\r\n      if(pomoCounter % pomosTillLongBreak === 0) {\r\n        remainingTime = longBreak * 60;\r\n      } else {\r\n        remainingTime = shortBreak * 60;\r\n      }\r\n    } else {\r\n      remainingTime = defaultPomoLength * 60;\r\n\r\n    }\r\n    updateTimerDisplay();\r\n    updatePomoCountersDisplay();\r\n    dailyResetOfPomoCounter();\r\n  }\r\n  saveTimerState();\r\n}\r\nfunction updateTimerDisplay() {\r\n  let minutes = Math.floor(remainingTime / 60);\r\n  let seconds = remainingTime % 60;\r\n  let displayMinutes = minutes < 10 ? `0${minutes}` : minutes;\r\n  let displaySeconds = seconds < 10 ? `0${seconds}` : seconds;\r\n  timer.innerHTML = `${displayMinutes}:${displaySeconds}`;\r\n}\r\nfunction updatePomoCountersDisplay() {\r\n  dailyPomoCounterDisplay.innerHTML = getDailyPomoCounter();\r\n  totalPomoCounterDisplay.innerHTML = getTotalPomoCounter();\r\n}\r\n// FUNCTION timerBlink\r\n// -----------------------------------------------------\r\nfunction timerBlink() {\r\n  timer.style.opacity == 1\r\n    ? (timer.style.opacity = 0)\r\n    : (timer.style.opacity = 1);\r\n}\r\n// FUNCTION startCountdown\r\n// -----------------------------------------------------\r\nfunction startCountdown() {\r\n  countdownInterval = setInterval(countdown, 1);\r\n}\r\n// Object eventHandler\r\nfunction startTimerBlinkOnPause() {\r\n  blinkInterval = setInterval(timerBlink, 500);\r\n}\r\nfunction startOrPauseCountdown() {\r\n  if (isStarted) {\r\n    pauseCountdown();\r\n    startTimerBlinkOnPause();\r\n    isStarted = false;\r\n    startBtn.innerHTML = \"Resume\";\r\n  } else if (!isStarted) {\r\n    startCountdown();\r\n    clearBlickInterval();\r\n    isStarted = true;\r\n    startBtn.innerHTML = \"Pause\";\r\n  }\r\n  saveTimerState();\r\n}\r\nfunction clearBlickInterval() {\r\n  timer.style.opacity = 1;\r\n  if (blinkInterval) {\r\n    clearInterval(blinkInterval);\r\n  }\r\n}\r\n\r\nfunction pauseCountdown() {\r\n  if (countdownInterval) {\r\n    clearInterval(countdownInterval);\r\n  }\r\n}\r\n\r\nfunction resetCountdown() {\r\n  pauseCountdown();\r\n  clearBlickInterval();\r\n  startBtn.innerHTML = \"Start\";\r\n  remainingTime = defaultPomoLength * 60;\r\n  isStarted = false;\r\n  isBreak = false;\r\n  sessionStorage.removeItem('timerState');\r\n  updateTimerDisplay();\r\n}\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/stateStorage.js\n\r\n\r\nfunction setPomoDailyCounter(pomosToday) {\r\n  const date = new Date();\r\n  const uniqueDate = new Date().toLocaleDateString();\r\n\r\n  const counter = {\r\n    pomosToday,\r\n    uniqueDate\r\n  }\r\n  localStorage.setItem('pomoDailyCounter', JSON.stringify(counter));\r\n}\r\n\r\nfunction setTotalPomoCounter() {\r\n  const currTotal = Number(localStorage.getItem('totalPomoCounter'));\r\n  localStorage.setItem('totalPomoCounter', `${currTotal + 1}`);\r\n}\r\n\r\nfunction getTotalPomoCounter() {\r\n  const tpm = localStorage.getItem('totalPomoCounter');\r\n  if(tpm !== null) {\r\n    return tpm\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nfunction getDailyPomoCounter() {\r\n  const counter = JSON.parse(localStorage.getItem('pomoDailyCounter'));\r\n  if (counter != null) {\r\n    return counter.pomosToday;\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nfunction dailyResetOfPomoCounter() {\r\n  const counter = JSON.parse(localStorage.getItem('pomoDailyCounter'));\r\n  if (counter != null) {\r\n    const storedDate = counter.uniqueDate;\r\n    const currentDate = new Date().toLocaleDateString();\r\n    if (storedDate !== currentDate) {\r\n      setPomoDailyCounter(0);\r\n    }\r\n  }\r\n}\r\nfunction getStoredTimerState() {\r\n  const storedState = sessionStorage.getItem('timerState');\r\n  return storedState ? JSON.parse(storedState) : null;\r\n}\r\nfunction saveTimerState() {\r\n  const timerState = {\r\n    remainingTime: remainingTime,\r\n    isStarted: isStarted,\r\n    isBreak: isBreak\r\n  };\r\n  sessionStorage.setItem('timerState', JSON.stringify(timerState));\r\n}\r\n\r\nfunction stateStorage_removeTimerState() {\r\n  sessionStorage.removeItem('timerState');\r\n}\r\n\r\n\n;// CONCATENATED MODULE: ./src/listeners.js\n\r\n\r\n\r\nstartBtn.addEventListener(\"click\", startOrPauseCountdown);\r\nresetBtn.addEventListener(\"click\", resetCountdown);\r\n\r\nwindow.addEventListener('beforeunload', () => {\r\n  removeTimerState();\r\n});\r\n\n;// CONCATENATED MODULE: ./src/index.js\n\r\n\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///332\n")}},__webpack_exports__={};__webpack_modules__[332]()})();